name: Build Conda packages

on: [push]

jobs:
  build-conda:
    name: build-conda (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        os: ["windows-latest"]
        # python-version: ["3.8", "3.9", "3.10"]
        python-version: ["3.10"]
        include:
          # - python-version: "3.8"
          #   numpy-version: "1.20"
          # - python-version: "3.9"
          #   numpy-version: "1.20"
          - python-version: "3.10"
            numpy-version: "1.21"
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          conda-build-version: "*"
          auto-update-conda: true
          uses-mamba: true
          miniforge-variant: Mambaforge
          python-version: ${{ matrix.python-version }}
          activate-environment: ""
          auto-activate-base: true
      - name: build recipe
        shell: bash -el {0}
        run: conda build -c conda-forge -c pytorch -c sdrobert conda-recipe --output-folder dist --python=${{ matrix.python-version }} --numpy=${{ matrix.numpy-version }}
      # - name: upload builds to github
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: conda-${{ matrix.os }}-py${{ matrix.python-version }}
      #     path: dist
      #     retention-days: 5
      #     if-no-files-found: error
      - name: upload builds to anaconda
        shell: bash -el {0}
        run: |
          [ -z "$ANACONDA_USERNAME" ] && echo "ANACONDA_USERNAME missing!"
          [ -z "${{ secrets.ANACONDA_TOKEN}}" ] && echo "ANACONDA_TOKEN missing!"
          conda install anaconda-client
          fs=( $(find dist -name '*.tar.bz2') )
          echo "to upload: ${fs[*]}"
          anaconda -t "${{ secrets.ANACONDA_TOKEN }}" upload -u "$ANACONDA_USERNAME" "${fs[@]}" --force